switch ($date) {
        case 'now':
            return DB::table('users')
                ->whereDate('created_at', Carbon::today())
                ->count();

        case 'month':
            return DB::table('users')
                ->whereMonth('created_at', Carbon::now()->month)
                ->whereYear('created_at', Carbon::now()->year)
                ->count();

        case 'last_7_days':
            return DB::table('users')
                ->whereBetween('created_at', [
                    Carbon::now()->subDays(7)->startOfDay(),
                    Carbon::now()->endOfDay()
                ])
                ->count();

        case 'last_30_days':
            return DB::table('users')
                ->whereBetween('created_at', [
                    Carbon::now()->subDays(30)->startOfDay(),
                    Carbon::now()->endOfDay()
                ])
                ->count();

        default:
            return DB::table('users')->count();
    }

Crypt and decrypt
use Illuminate\Support\Facades\Crypt;

// Encrypt the key
$encryptedKey = Crypt::encryptString($apiKey);

// Decrypt the key
$decryptedKey = Crypt::decryptString($encryptedKey);

#format only applicable in using all() query builder
format('F j, Y,  h : i A'); #date format
sample # echo $bank->created_at->format('F j, Y,  h : i A');

#using Map function
return DB::table('bank_partners')
    ->select('name', 'url', 'img_url', 'description', DB::raw('CAST(created_at AS DATETIME) as created_at'))
    ->get();

    $banks = DB::table('bank_partners')
    ->select('name', 'url', 'img_url', 'description', 'created_at')
    ->get()
    ->map(function ($bank) {
        $bank->created_at = \Carbon\Carbon::parse($bank->created_at);
        return $bank;
    });

return $banks;